
02_LED_Push_Button.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000018c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000528  0800018c  0800018c  0000118c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080006b4  080006bc  000016bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080006b4  080006b4  000016bc  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  080006b4  080006b4  000016bc  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  080006b4  080006bc  000016bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080006b4  080006b4  000016b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080006b8  080006b8  000016b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000016bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .sram2        00000000  10000000  10000000  000016bc  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  000016bc  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000094f  00000000  00000000  000016e6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000260  00000000  00000000  00002035  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c0  00000000  00000000  00002298  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000084  00000000  00000000  00002358  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000015b8  00000000  00000000  000023dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000d46  00000000  00000000  00003994  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00005958  00000000  00000000  000046da  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0000a032  2**0
                  CONTENTS, READONLY
 21 .debug_frame  0000024c  00000000  00000000  0000a078  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000005a  00000000  00000000  0000a2c4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800018c <__do_global_dtors_aux>:
 800018c:	b510      	push	{r4, lr}
 800018e:	4c05      	ldr	r4, [pc, #20]	@ (80001a4 <__do_global_dtors_aux+0x18>)
 8000190:	7823      	ldrb	r3, [r4, #0]
 8000192:	b933      	cbnz	r3, 80001a2 <__do_global_dtors_aux+0x16>
 8000194:	4b04      	ldr	r3, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x1c>)
 8000196:	b113      	cbz	r3, 800019e <__do_global_dtors_aux+0x12>
 8000198:	4804      	ldr	r0, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x20>)
 800019a:	f3af 8000 	nop.w
 800019e:	2301      	movs	r3, #1
 80001a0:	7023      	strb	r3, [r4, #0]
 80001a2:	bd10      	pop	{r4, pc}
 80001a4:	20000000 	.word	0x20000000
 80001a8:	00000000 	.word	0x00000000
 80001ac:	0800069c 	.word	0x0800069c

080001b0 <frame_dummy>:
 80001b0:	b508      	push	{r3, lr}
 80001b2:	4b03      	ldr	r3, [pc, #12]	@ (80001c0 <frame_dummy+0x10>)
 80001b4:	b11b      	cbz	r3, 80001be <frame_dummy+0xe>
 80001b6:	4903      	ldr	r1, [pc, #12]	@ (80001c4 <frame_dummy+0x14>)
 80001b8:	4803      	ldr	r0, [pc, #12]	@ (80001c8 <frame_dummy+0x18>)
 80001ba:	f3af 8000 	nop.w
 80001be:	bd08      	pop	{r3, pc}
 80001c0:	00000000 	.word	0x00000000
 80001c4:	20000004 	.word	0x20000004
 80001c8:	0800069c 	.word	0x0800069c

080001cc <delay>:
#include "stm32l4xx_gpio_driver.h"


// Simple delay function (for debouncing and LED blink timing)
void delay()
{
 80001cc:	b480      	push	{r7}
 80001ce:	b083      	sub	sp, #12
 80001d0:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i < 200000; i++);
 80001d2:	2300      	movs	r3, #0
 80001d4:	607b      	str	r3, [r7, #4]
 80001d6:	e002      	b.n	80001de <delay+0x12>
 80001d8:	687b      	ldr	r3, [r7, #4]
 80001da:	3301      	adds	r3, #1
 80001dc:	607b      	str	r3, [r7, #4]
 80001de:	687b      	ldr	r3, [r7, #4]
 80001e0:	4a04      	ldr	r2, [pc, #16]	@ (80001f4 <delay+0x28>)
 80001e2:	4293      	cmp	r3, r2
 80001e4:	d9f8      	bls.n	80001d8 <delay+0xc>
}
 80001e6:	bf00      	nop
 80001e8:	bf00      	nop
 80001ea:	370c      	adds	r7, #12
 80001ec:	46bd      	mov	sp, r7
 80001ee:	bc80      	pop	{r7}
 80001f0:	4770      	bx	lr
 80001f2:	bf00      	nop
 80001f4:	00030d3f 	.word	0x00030d3f

080001f8 <main>:

int main(void)
{
 80001f8:	b580      	push	{r7, lr}
 80001fa:	b086      	sub	sp, #24
 80001fc:	af00      	add	r7, sp, #0
	/* Create GPIO handles for LED and Button */
	GPIO_Handle_t GpioLed, GpioBtn;

	// --- LED Setup ---
	GpioLed.pGPIOx = GPIOA;                          // LED is on Port A
 80001fe:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 8000202:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5; // Use Pin 5
 8000204:	2305      	movs	r3, #5
 8000206:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;   // Set as Output
 8000208:	2301      	movs	r3, #1
 800020a:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST; // Fast speed
 800020c:	2302      	movs	r3, #2
 800020e:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP; // Push-pull type
 8000210:	2300      	movs	r3, #0
 8000212:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD; // No pull-up/down
 8000214:	2300      	movs	r3, #0
 8000216:	74fb      	strb	r3, [r7, #19]
	GPIO_PeriClockControl(GPIOA, ENABLE);           // Turn on clock for Port A
 8000218:	2101      	movs	r1, #1
 800021a:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 800021e:	f000 f853 	bl	80002c8 <GPIO_PeriClockControl>
	GPIO_Init(&GpioLed);                            // Apply LED settings
 8000222:	f107 030c 	add.w	r3, r7, #12
 8000226:	4618      	mov	r0, r3
 8000228:	f000 f91c 	bl	8000464 <GPIO_Init>

	// --- Button Setup ---
	GpioBtn.pGPIOx = GPIOC;                          // Button is on Port C
 800022c:	4b10      	ldr	r3, [pc, #64]	@ (8000270 <main+0x78>)
 800022e:	603b      	str	r3, [r7, #0]
	GpioBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13; // Use Pin 13
 8000230:	230d      	movs	r3, #13
 8000232:	713b      	strb	r3, [r7, #4]
	GpioBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;     // Set as Input
 8000234:	2300      	movs	r3, #0
 8000236:	717b      	strb	r3, [r7, #5]
	GpioBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST; // Fast speed
 8000238:	2302      	movs	r3, #2
 800023a:	71bb      	strb	r3, [r7, #6]
	GpioBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD; // No pull-up/down
 800023c:	2300      	movs	r3, #0
 800023e:	71fb      	strb	r3, [r7, #7]
	GPIO_PeriClockControl(GPIOC, ENABLE);           // Turn on clock for Port C
 8000240:	2101      	movs	r1, #1
 8000242:	480b      	ldr	r0, [pc, #44]	@ (8000270 <main+0x78>)
 8000244:	f000 f840 	bl	80002c8 <GPIO_PeriClockControl>
	GPIO_Init(&GpioBtn);                            // Apply Button settings
 8000248:	463b      	mov	r3, r7
 800024a:	4618      	mov	r0, r3
 800024c:	f000 f90a 	bl	8000464 <GPIO_Init>

	while(1)
	{
		// Button pressed? (PC13 = 0 when pressed)
		if(GPIO_ReadFromInputPin(GPIOC, GPIO_PIN_NO_13) == 0)
 8000250:	210d      	movs	r1, #13
 8000252:	4807      	ldr	r0, [pc, #28]	@ (8000270 <main+0x78>)
 8000254:	f000 f9d4 	bl	8000600 <GPIO_ReadFromInputPin>
 8000258:	4603      	mov	r3, r0
 800025a:	2b00      	cmp	r3, #0
 800025c:	d1f8      	bne.n	8000250 <main+0x58>
		{
			delay(); // Small wait to avoid bouncing effect
 800025e:	f7ff ffb5 	bl	80001cc <delay>
			GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_5); // Change LED state
 8000262:	2105      	movs	r1, #5
 8000264:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8000268:	f000 f9df 	bl	800062a <GPIO_ToggleOutputPin>
		if(GPIO_ReadFromInputPin(GPIOC, GPIO_PIN_NO_13) == 0)
 800026c:	e7f0      	b.n	8000250 <main+0x58>
 800026e:	bf00      	nop
 8000270:	48000800 	.word	0x48000800

08000274 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000274:	480d      	ldr	r0, [pc, #52]	@ (80002ac <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000276:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000278:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800027c:	480c      	ldr	r0, [pc, #48]	@ (80002b0 <LoopForever+0x6>)
  ldr r1, =_edata
 800027e:	490d      	ldr	r1, [pc, #52]	@ (80002b4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000280:	4a0d      	ldr	r2, [pc, #52]	@ (80002b8 <LoopForever+0xe>)
  movs r3, #0
 8000282:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000284:	e002      	b.n	800028c <LoopCopyDataInit>

08000286 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000286:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000288:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800028a:	3304      	adds	r3, #4

0800028c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800028c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800028e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000290:	d3f9      	bcc.n	8000286 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000292:	4a0a      	ldr	r2, [pc, #40]	@ (80002bc <LoopForever+0x12>)
  ldr r4, =_ebss
 8000294:	4c0a      	ldr	r4, [pc, #40]	@ (80002c0 <LoopForever+0x16>)
  movs r3, #0
 8000296:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000298:	e001      	b.n	800029e <LoopFillZerobss>

0800029a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800029a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800029c:	3204      	adds	r2, #4

0800029e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800029e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002a0:	d3fb      	bcc.n	800029a <FillZerobss>


/* Call static constructors */
  bl __libc_init_array
 80002a2:	f000 f9d7 	bl	8000654 <__libc_init_array>
/* Call the application's entry point.*/

  bl main
 80002a6:	f7ff ffa7 	bl	80001f8 <main>

080002aa <LoopForever>:

LoopForever:
  b LoopForever
 80002aa:	e7fe      	b.n	80002aa <LoopForever>
  ldr   r0, =_estack
 80002ac:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80002b0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002b4:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002b8:	080006bc 	.word	0x080006bc
  ldr r2, =_sbss
 80002bc:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002c0:	2000001c 	.word	0x2000001c

080002c4 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002c4:	e7fe      	b.n	80002c4 <ADC1_2_IRQHandler>
	...

080002c8 <GPIO_PeriClockControl>:

/* Peripheral clock setup */

// This function enables or disables peripheral clock for the given GPIO port
void GPIO_PeriClockControl(GPIO_Regdef_t *pGPIOx , uint8_t EnorDi)
{
 80002c8:	b480      	push	{r7}
 80002ca:	b083      	sub	sp, #12
 80002cc:	af00      	add	r7, sp, #0
 80002ce:	6078      	str	r0, [r7, #4]
 80002d0:	460b      	mov	r3, r1
 80002d2:	70fb      	strb	r3, [r7, #3]


	if(EnorDi == ENABLE)
 80002d4:	78fb      	ldrb	r3, [r7, #3]
 80002d6:	2b01      	cmp	r3, #1
 80002d8:	d157      	bne.n	800038a <GPIO_PeriClockControl+0xc2>
	{
		if(pGPIOx == GPIOA)
 80002da:	687b      	ldr	r3, [r7, #4]
 80002dc:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 80002e0:	d106      	bne.n	80002f0 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 80002e2:	4b58      	ldr	r3, [pc, #352]	@ (8000444 <GPIO_PeriClockControl+0x17c>)
 80002e4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80002e6:	4a57      	ldr	r2, [pc, #348]	@ (8000444 <GPIO_PeriClockControl+0x17c>)
 80002e8:	f043 0301 	orr.w	r3, r3, #1
 80002ec:	64d3      	str	r3, [r2, #76]	@ 0x4c
				{
					GPIOH_PCLK_DI();
				}
	}

}
 80002ee:	e0a3      	b.n	8000438 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx==GPIOB)
 80002f0:	687b      	ldr	r3, [r7, #4]
 80002f2:	4a55      	ldr	r2, [pc, #340]	@ (8000448 <GPIO_PeriClockControl+0x180>)
 80002f4:	4293      	cmp	r3, r2
 80002f6:	d106      	bne.n	8000306 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80002f8:	4b52      	ldr	r3, [pc, #328]	@ (8000444 <GPIO_PeriClockControl+0x17c>)
 80002fa:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80002fc:	4a51      	ldr	r2, [pc, #324]	@ (8000444 <GPIO_PeriClockControl+0x17c>)
 80002fe:	f043 0302 	orr.w	r3, r3, #2
 8000302:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000304:	e098      	b.n	8000438 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx==GPIOC)
 8000306:	687b      	ldr	r3, [r7, #4]
 8000308:	4a50      	ldr	r2, [pc, #320]	@ (800044c <GPIO_PeriClockControl+0x184>)
 800030a:	4293      	cmp	r3, r2
 800030c:	d106      	bne.n	800031c <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800030e:	4b4d      	ldr	r3, [pc, #308]	@ (8000444 <GPIO_PeriClockControl+0x17c>)
 8000310:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000312:	4a4c      	ldr	r2, [pc, #304]	@ (8000444 <GPIO_PeriClockControl+0x17c>)
 8000314:	f043 0304 	orr.w	r3, r3, #4
 8000318:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 800031a:	e08d      	b.n	8000438 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx==GPIOD)
 800031c:	687b      	ldr	r3, [r7, #4]
 800031e:	4a4c      	ldr	r2, [pc, #304]	@ (8000450 <GPIO_PeriClockControl+0x188>)
 8000320:	4293      	cmp	r3, r2
 8000322:	d106      	bne.n	8000332 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000324:	4b47      	ldr	r3, [pc, #284]	@ (8000444 <GPIO_PeriClockControl+0x17c>)
 8000326:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000328:	4a46      	ldr	r2, [pc, #280]	@ (8000444 <GPIO_PeriClockControl+0x17c>)
 800032a:	f043 0308 	orr.w	r3, r3, #8
 800032e:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000330:	e082      	b.n	8000438 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx==GPIOE)
 8000332:	687b      	ldr	r3, [r7, #4]
 8000334:	4a47      	ldr	r2, [pc, #284]	@ (8000454 <GPIO_PeriClockControl+0x18c>)
 8000336:	4293      	cmp	r3, r2
 8000338:	d106      	bne.n	8000348 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800033a:	4b42      	ldr	r3, [pc, #264]	@ (8000444 <GPIO_PeriClockControl+0x17c>)
 800033c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800033e:	4a41      	ldr	r2, [pc, #260]	@ (8000444 <GPIO_PeriClockControl+0x17c>)
 8000340:	f043 0310 	orr.w	r3, r3, #16
 8000344:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000346:	e077      	b.n	8000438 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx==GPIOF)
 8000348:	687b      	ldr	r3, [r7, #4]
 800034a:	4a43      	ldr	r2, [pc, #268]	@ (8000458 <GPIO_PeriClockControl+0x190>)
 800034c:	4293      	cmp	r3, r2
 800034e:	d106      	bne.n	800035e <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000350:	4b3c      	ldr	r3, [pc, #240]	@ (8000444 <GPIO_PeriClockControl+0x17c>)
 8000352:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000354:	4a3b      	ldr	r2, [pc, #236]	@ (8000444 <GPIO_PeriClockControl+0x17c>)
 8000356:	f043 0320 	orr.w	r3, r3, #32
 800035a:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 800035c:	e06c      	b.n	8000438 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx==GPIOG)
 800035e:	687b      	ldr	r3, [r7, #4]
 8000360:	4a3e      	ldr	r2, [pc, #248]	@ (800045c <GPIO_PeriClockControl+0x194>)
 8000362:	4293      	cmp	r3, r2
 8000364:	d106      	bne.n	8000374 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 8000366:	4b37      	ldr	r3, [pc, #220]	@ (8000444 <GPIO_PeriClockControl+0x17c>)
 8000368:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800036a:	4a36      	ldr	r2, [pc, #216]	@ (8000444 <GPIO_PeriClockControl+0x17c>)
 800036c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000370:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000372:	e061      	b.n	8000438 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx==GPIOH)
 8000374:	687b      	ldr	r3, [r7, #4]
 8000376:	4a3a      	ldr	r2, [pc, #232]	@ (8000460 <GPIO_PeriClockControl+0x198>)
 8000378:	4293      	cmp	r3, r2
 800037a:	d15d      	bne.n	8000438 <GPIO_PeriClockControl+0x170>
			GPIOH_PCLK_EN();
 800037c:	4b31      	ldr	r3, [pc, #196]	@ (8000444 <GPIO_PeriClockControl+0x17c>)
 800037e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000380:	4a30      	ldr	r2, [pc, #192]	@ (8000444 <GPIO_PeriClockControl+0x17c>)
 8000382:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000386:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000388:	e056      	b.n	8000438 <GPIO_PeriClockControl+0x170>
		if(pGPIOx == GPIOA)
 800038a:	687b      	ldr	r3, [r7, #4]
 800038c:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 8000390:	d106      	bne.n	80003a0 <GPIO_PeriClockControl+0xd8>
					GPIOA_PCLK_DI();
 8000392:	4b2c      	ldr	r3, [pc, #176]	@ (8000444 <GPIO_PeriClockControl+0x17c>)
 8000394:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000396:	4a2b      	ldr	r2, [pc, #172]	@ (8000444 <GPIO_PeriClockControl+0x17c>)
 8000398:	f023 0301 	bic.w	r3, r3, #1
 800039c:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 800039e:	e04b      	b.n	8000438 <GPIO_PeriClockControl+0x170>
				else if(pGPIOx==GPIOB)
 80003a0:	687b      	ldr	r3, [r7, #4]
 80003a2:	4a29      	ldr	r2, [pc, #164]	@ (8000448 <GPIO_PeriClockControl+0x180>)
 80003a4:	4293      	cmp	r3, r2
 80003a6:	d106      	bne.n	80003b6 <GPIO_PeriClockControl+0xee>
					GPIOB_PCLK_DI();
 80003a8:	4b26      	ldr	r3, [pc, #152]	@ (8000444 <GPIO_PeriClockControl+0x17c>)
 80003aa:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80003ac:	4a25      	ldr	r2, [pc, #148]	@ (8000444 <GPIO_PeriClockControl+0x17c>)
 80003ae:	f023 0302 	bic.w	r3, r3, #2
 80003b2:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80003b4:	e040      	b.n	8000438 <GPIO_PeriClockControl+0x170>
				else if(pGPIOx==GPIOC)
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	4a24      	ldr	r2, [pc, #144]	@ (800044c <GPIO_PeriClockControl+0x184>)
 80003ba:	4293      	cmp	r3, r2
 80003bc:	d106      	bne.n	80003cc <GPIO_PeriClockControl+0x104>
					GPIOC_PCLK_DI();
 80003be:	4b21      	ldr	r3, [pc, #132]	@ (8000444 <GPIO_PeriClockControl+0x17c>)
 80003c0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80003c2:	4a20      	ldr	r2, [pc, #128]	@ (8000444 <GPIO_PeriClockControl+0x17c>)
 80003c4:	f023 0304 	bic.w	r3, r3, #4
 80003c8:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80003ca:	e035      	b.n	8000438 <GPIO_PeriClockControl+0x170>
				else if(pGPIOx==GPIOD)
 80003cc:	687b      	ldr	r3, [r7, #4]
 80003ce:	4a20      	ldr	r2, [pc, #128]	@ (8000450 <GPIO_PeriClockControl+0x188>)
 80003d0:	4293      	cmp	r3, r2
 80003d2:	d106      	bne.n	80003e2 <GPIO_PeriClockControl+0x11a>
					GPIOD_PCLK_DI();
 80003d4:	4b1b      	ldr	r3, [pc, #108]	@ (8000444 <GPIO_PeriClockControl+0x17c>)
 80003d6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80003d8:	4a1a      	ldr	r2, [pc, #104]	@ (8000444 <GPIO_PeriClockControl+0x17c>)
 80003da:	f023 0308 	bic.w	r3, r3, #8
 80003de:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80003e0:	e02a      	b.n	8000438 <GPIO_PeriClockControl+0x170>
				else if(pGPIOx==GPIOE)
 80003e2:	687b      	ldr	r3, [r7, #4]
 80003e4:	4a1b      	ldr	r2, [pc, #108]	@ (8000454 <GPIO_PeriClockControl+0x18c>)
 80003e6:	4293      	cmp	r3, r2
 80003e8:	d106      	bne.n	80003f8 <GPIO_PeriClockControl+0x130>
					GPIOE_PCLK_DI();
 80003ea:	4b16      	ldr	r3, [pc, #88]	@ (8000444 <GPIO_PeriClockControl+0x17c>)
 80003ec:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80003ee:	4a15      	ldr	r2, [pc, #84]	@ (8000444 <GPIO_PeriClockControl+0x17c>)
 80003f0:	f023 0310 	bic.w	r3, r3, #16
 80003f4:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80003f6:	e01f      	b.n	8000438 <GPIO_PeriClockControl+0x170>
				else if(pGPIOx==GPIOF)
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	4a17      	ldr	r2, [pc, #92]	@ (8000458 <GPIO_PeriClockControl+0x190>)
 80003fc:	4293      	cmp	r3, r2
 80003fe:	d106      	bne.n	800040e <GPIO_PeriClockControl+0x146>
					GPIOF_PCLK_DI();
 8000400:	4b10      	ldr	r3, [pc, #64]	@ (8000444 <GPIO_PeriClockControl+0x17c>)
 8000402:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000404:	4a0f      	ldr	r2, [pc, #60]	@ (8000444 <GPIO_PeriClockControl+0x17c>)
 8000406:	f023 0320 	bic.w	r3, r3, #32
 800040a:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 800040c:	e014      	b.n	8000438 <GPIO_PeriClockControl+0x170>
				else if(pGPIOx==GPIOG)
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	4a12      	ldr	r2, [pc, #72]	@ (800045c <GPIO_PeriClockControl+0x194>)
 8000412:	4293      	cmp	r3, r2
 8000414:	d106      	bne.n	8000424 <GPIO_PeriClockControl+0x15c>
					GPIOG_PCLK_DI();
 8000416:	4b0b      	ldr	r3, [pc, #44]	@ (8000444 <GPIO_PeriClockControl+0x17c>)
 8000418:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800041a:	4a0a      	ldr	r2, [pc, #40]	@ (8000444 <GPIO_PeriClockControl+0x17c>)
 800041c:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8000420:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000422:	e009      	b.n	8000438 <GPIO_PeriClockControl+0x170>
				else if(pGPIOx==GPIOH)
 8000424:	687b      	ldr	r3, [r7, #4]
 8000426:	4a0e      	ldr	r2, [pc, #56]	@ (8000460 <GPIO_PeriClockControl+0x198>)
 8000428:	4293      	cmp	r3, r2
 800042a:	d105      	bne.n	8000438 <GPIO_PeriClockControl+0x170>
					GPIOH_PCLK_DI();
 800042c:	4b05      	ldr	r3, [pc, #20]	@ (8000444 <GPIO_PeriClockControl+0x17c>)
 800042e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000430:	4a04      	ldr	r2, [pc, #16]	@ (8000444 <GPIO_PeriClockControl+0x17c>)
 8000432:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000436:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000438:	bf00      	nop
 800043a:	370c      	adds	r7, #12
 800043c:	46bd      	mov	sp, r7
 800043e:	bc80      	pop	{r7}
 8000440:	4770      	bx	lr
 8000442:	bf00      	nop
 8000444:	40021000 	.word	0x40021000
 8000448:	48000400 	.word	0x48000400
 800044c:	48000800 	.word	0x48000800
 8000450:	48000c00 	.word	0x48000c00
 8000454:	48001000 	.word	0x48001000
 8000458:	48001400 	.word	0x48001400
 800045c:	48001800 	.word	0x48001800
 8000460:	48001c00 	.word	0x48001c00

08000464 <GPIO_Init>:

/* Initialization and de-initialization */


void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000464:	b480      	push	{r7}
 8000466:	b087      	sub	sp, #28
 8000468:	af00      	add	r7, sp, #0
 800046a:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;
 800046c:	2300      	movs	r3, #0
 800046e:	617b      	str	r3, [r7, #20]
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8000470:	687b      	ldr	r3, [r7, #4]
 8000472:	795b      	ldrb	r3, [r3, #5]
 8000474:	2b03      	cmp	r3, #3
 8000476:	d821      	bhi.n	80004bc <GPIO_Init+0x58>
		{
			temp=( pGPIOHandle -> GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 8000478:	687b      	ldr	r3, [r7, #4]
 800047a:	795b      	ldrb	r3, [r3, #5]
 800047c:	461a      	mov	r2, r3
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	791b      	ldrb	r3, [r3, #4]
 8000482:	005b      	lsls	r3, r3, #1
 8000484:	fa02 f303 	lsl.w	r3, r2, r3
 8000488:	617b      	str	r3, [r7, #20]
			pGPIOHandle->pGPIOx->MODER &= ~(0X03 << (2* pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 800048a:	687b      	ldr	r3, [r7, #4]
 800048c:	681b      	ldr	r3, [r3, #0]
 800048e:	681a      	ldr	r2, [r3, #0]
 8000490:	687b      	ldr	r3, [r7, #4]
 8000492:	791b      	ldrb	r3, [r3, #4]
 8000494:	005b      	lsls	r3, r3, #1
 8000496:	2103      	movs	r1, #3
 8000498:	fa01 f303 	lsl.w	r3, r1, r3
 800049c:	43db      	mvns	r3, r3
 800049e:	4619      	mov	r1, r3
 80004a0:	687b      	ldr	r3, [r7, #4]
 80004a2:	681b      	ldr	r3, [r3, #0]
 80004a4:	400a      	ands	r2, r1
 80004a6:	601a      	str	r2, [r3, #0]
			pGPIOHandle ->pGPIOx->MODER |= temp;
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	681b      	ldr	r3, [r3, #0]
 80004ac:	6819      	ldr	r1, [r3, #0]
 80004ae:	687b      	ldr	r3, [r7, #4]
 80004b0:	681b      	ldr	r3, [r3, #0]
 80004b2:	697a      	ldr	r2, [r7, #20]
 80004b4:	430a      	orrs	r2, r1
 80004b6:	601a      	str	r2, [r3, #0]
			temp=0;
 80004b8:	2300      	movs	r3, #0
 80004ba:	617b      	str	r3, [r7, #20]
		else
		{
			//for interrupts
		}

		temp=0;
 80004bc:	2300      	movs	r3, #0
 80004be:	617b      	str	r3, [r7, #20]
		temp=(pGPIOHandle -> GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004c0:	687b      	ldr	r3, [r7, #4]
 80004c2:	799b      	ldrb	r3, [r3, #6]
 80004c4:	461a      	mov	r2, r3
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	791b      	ldrb	r3, [r3, #4]
 80004ca:	005b      	lsls	r3, r3, #1
 80004cc:	fa02 f303 	lsl.w	r3, r2, r3
 80004d0:	617b      	str	r3, [r7, #20]
		pGPIOHandle ->pGPIOx->OSPEEDR &= ~(0X03 << (2* pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 80004d2:	687b      	ldr	r3, [r7, #4]
 80004d4:	681b      	ldr	r3, [r3, #0]
 80004d6:	689a      	ldr	r2, [r3, #8]
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	791b      	ldrb	r3, [r3, #4]
 80004dc:	005b      	lsls	r3, r3, #1
 80004de:	2103      	movs	r1, #3
 80004e0:	fa01 f303 	lsl.w	r3, r1, r3
 80004e4:	43db      	mvns	r3, r3
 80004e6:	4619      	mov	r1, r3
 80004e8:	687b      	ldr	r3, [r7, #4]
 80004ea:	681b      	ldr	r3, [r3, #0]
 80004ec:	400a      	ands	r2, r1
 80004ee:	609a      	str	r2, [r3, #8]
		pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	681b      	ldr	r3, [r3, #0]
 80004f4:	6899      	ldr	r1, [r3, #8]
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	681b      	ldr	r3, [r3, #0]
 80004fa:	697a      	ldr	r2, [r7, #20]
 80004fc:	430a      	orrs	r2, r1
 80004fe:	609a      	str	r2, [r3, #8]
		temp=0;
 8000500:	2300      	movs	r3, #0
 8000502:	617b      	str	r3, [r7, #20]

		temp=(pGPIOHandle -> GPIO_PinConfig.GPIO_PinPuPdControl<< (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000504:	687b      	ldr	r3, [r7, #4]
 8000506:	79db      	ldrb	r3, [r3, #7]
 8000508:	461a      	mov	r2, r3
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	791b      	ldrb	r3, [r3, #4]
 800050e:	005b      	lsls	r3, r3, #1
 8000510:	fa02 f303 	lsl.w	r3, r2, r3
 8000514:	617b      	str	r3, [r7, #20]
		pGPIOHandle ->pGPIOx->PUPDR &= ~(0X03 << (2* pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 8000516:	687b      	ldr	r3, [r7, #4]
 8000518:	681b      	ldr	r3, [r3, #0]
 800051a:	68da      	ldr	r2, [r3, #12]
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	791b      	ldrb	r3, [r3, #4]
 8000520:	005b      	lsls	r3, r3, #1
 8000522:	2103      	movs	r1, #3
 8000524:	fa01 f303 	lsl.w	r3, r1, r3
 8000528:	43db      	mvns	r3, r3
 800052a:	4619      	mov	r1, r3
 800052c:	687b      	ldr	r3, [r7, #4]
 800052e:	681b      	ldr	r3, [r3, #0]
 8000530:	400a      	ands	r2, r1
 8000532:	60da      	str	r2, [r3, #12]
		pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000534:	687b      	ldr	r3, [r7, #4]
 8000536:	681b      	ldr	r3, [r3, #0]
 8000538:	68d9      	ldr	r1, [r3, #12]
 800053a:	687b      	ldr	r3, [r7, #4]
 800053c:	681b      	ldr	r3, [r3, #0]
 800053e:	697a      	ldr	r2, [r7, #20]
 8000540:	430a      	orrs	r2, r1
 8000542:	60da      	str	r2, [r3, #12]
		temp=0;
 8000544:	2300      	movs	r3, #0
 8000546:	617b      	str	r3, [r7, #20]

		temp=(pGPIOHandle -> GPIO_PinConfig.GPIO_PinOPType<<  pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000548:	687b      	ldr	r3, [r7, #4]
 800054a:	7a1b      	ldrb	r3, [r3, #8]
 800054c:	461a      	mov	r2, r3
 800054e:	687b      	ldr	r3, [r7, #4]
 8000550:	791b      	ldrb	r3, [r3, #4]
 8000552:	fa02 f303 	lsl.w	r3, r2, r3
 8000556:	617b      	str	r3, [r7, #20]
		pGPIOHandle ->pGPIOx->OTYPER &= ~(0X01 << ( pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 8000558:	687b      	ldr	r3, [r7, #4]
 800055a:	681b      	ldr	r3, [r3, #0]
 800055c:	685a      	ldr	r2, [r3, #4]
 800055e:	687b      	ldr	r3, [r7, #4]
 8000560:	791b      	ldrb	r3, [r3, #4]
 8000562:	4619      	mov	r1, r3
 8000564:	2301      	movs	r3, #1
 8000566:	408b      	lsls	r3, r1
 8000568:	43db      	mvns	r3, r3
 800056a:	4619      	mov	r1, r3
 800056c:	687b      	ldr	r3, [r7, #4]
 800056e:	681b      	ldr	r3, [r3, #0]
 8000570:	400a      	ands	r2, r1
 8000572:	605a      	str	r2, [r3, #4]
		pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000574:	687b      	ldr	r3, [r7, #4]
 8000576:	681b      	ldr	r3, [r3, #0]
 8000578:	6859      	ldr	r1, [r3, #4]
 800057a:	687b      	ldr	r3, [r7, #4]
 800057c:	681b      	ldr	r3, [r3, #0]
 800057e:	697a      	ldr	r2, [r7, #20]
 8000580:	430a      	orrs	r2, r1
 8000582:	605a      	str	r2, [r3, #4]
		temp=0;
 8000584:	2300      	movs	r3, #0
 8000586:	617b      	str	r3, [r7, #20]

		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	795b      	ldrb	r3, [r3, #5]
 800058c:	2b02      	cmp	r3, #2
 800058e:	d132      	bne.n	80005f6 <GPIO_Init+0x192>
		{
			uint32_t temp1 ,temp2;
			temp1=pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/8;
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	791b      	ldrb	r3, [r3, #4]
 8000594:	08db      	lsrs	r3, r3, #3
 8000596:	b2db      	uxtb	r3, r3
 8000598:	613b      	str	r3, [r7, #16]
			temp2=pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%8;
 800059a:	687b      	ldr	r3, [r7, #4]
 800059c:	791b      	ldrb	r3, [r3, #4]
 800059e:	f003 0307 	and.w	r3, r3, #7
 80005a2:	60fb      	str	r3, [r7, #12]
			pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0X0f<< (4*temp2));
 80005a4:	687b      	ldr	r3, [r7, #4]
 80005a6:	681b      	ldr	r3, [r3, #0]
 80005a8:	693a      	ldr	r2, [r7, #16]
 80005aa:	3208      	adds	r2, #8
 80005ac:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80005b0:	68fb      	ldr	r3, [r7, #12]
 80005b2:	009b      	lsls	r3, r3, #2
 80005b4:	210f      	movs	r1, #15
 80005b6:	fa01 f303 	lsl.w	r3, r1, r3
 80005ba:	43db      	mvns	r3, r3
 80005bc:	4619      	mov	r1, r3
 80005be:	687b      	ldr	r3, [r7, #4]
 80005c0:	681b      	ldr	r3, [r3, #0]
 80005c2:	4011      	ands	r1, r2
 80005c4:	693a      	ldr	r2, [r7, #16]
 80005c6:	3208      	adds	r2, #8
 80005c8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
			pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4*temp2));
 80005cc:	687b      	ldr	r3, [r7, #4]
 80005ce:	681b      	ldr	r3, [r3, #0]
 80005d0:	693a      	ldr	r2, [r7, #16]
 80005d2:	3208      	adds	r2, #8
 80005d4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	7a5b      	ldrb	r3, [r3, #9]
 80005dc:	4619      	mov	r1, r3
 80005de:	68fb      	ldr	r3, [r7, #12]
 80005e0:	009b      	lsls	r3, r3, #2
 80005e2:	fa01 f303 	lsl.w	r3, r1, r3
 80005e6:	4619      	mov	r1, r3
 80005e8:	687b      	ldr	r3, [r7, #4]
 80005ea:	681b      	ldr	r3, [r3, #0]
 80005ec:	4311      	orrs	r1, r2
 80005ee:	693a      	ldr	r2, [r7, #16]
 80005f0:	3208      	adds	r2, #8
 80005f2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		}




}
 80005f6:	bf00      	nop
 80005f8:	371c      	adds	r7, #28
 80005fa:	46bd      	mov	sp, r7
 80005fc:	bc80      	pop	{r7}
 80005fe:	4770      	bx	lr

08000600 <GPIO_ReadFromInputPin>:


/* Read and write operations */

uint8_t  GPIO_ReadFromInputPin(GPIO_Regdef_t *pGPIOx , uint8_t PinNumber)
{
 8000600:	b480      	push	{r7}
 8000602:	b085      	sub	sp, #20
 8000604:	af00      	add	r7, sp, #0
 8000606:	6078      	str	r0, [r7, #4]
 8000608:	460b      	mov	r3, r1
 800060a:	70fb      	strb	r3, [r7, #3]
	uint8_t value;
	value= (uint8_t) (( pGPIOx->IDR >> PinNumber ) & 0X01);
 800060c:	687b      	ldr	r3, [r7, #4]
 800060e:	691a      	ldr	r2, [r3, #16]
 8000610:	78fb      	ldrb	r3, [r7, #3]
 8000612:	fa22 f303 	lsr.w	r3, r2, r3
 8000616:	b2db      	uxtb	r3, r3
 8000618:	f003 0301 	and.w	r3, r3, #1
 800061c:	73fb      	strb	r3, [r7, #15]
	return value;
 800061e:	7bfb      	ldrb	r3, [r7, #15]

}
 8000620:	4618      	mov	r0, r3
 8000622:	3714      	adds	r7, #20
 8000624:	46bd      	mov	sp, r7
 8000626:	bc80      	pop	{r7}
 8000628:	4770      	bx	lr

0800062a <GPIO_ToggleOutputPin>:

}


void GPIO_ToggleOutputPin(GPIO_Regdef_t *pGPIOx,uint8_t PinNumber)
{
 800062a:	b480      	push	{r7}
 800062c:	b083      	sub	sp, #12
 800062e:	af00      	add	r7, sp, #0
 8000630:	6078      	str	r0, [r7, #4]
 8000632:	460b      	mov	r3, r1
 8000634:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1<<PinNumber);
 8000636:	687b      	ldr	r3, [r7, #4]
 8000638:	695b      	ldr	r3, [r3, #20]
 800063a:	78fa      	ldrb	r2, [r7, #3]
 800063c:	2101      	movs	r1, #1
 800063e:	fa01 f202 	lsl.w	r2, r1, r2
 8000642:	405a      	eors	r2, r3
 8000644:	687b      	ldr	r3, [r7, #4]
 8000646:	615a      	str	r2, [r3, #20]
}
 8000648:	bf00      	nop
 800064a:	370c      	adds	r7, #12
 800064c:	46bd      	mov	sp, r7
 800064e:	bc80      	pop	{r7}
 8000650:	4770      	bx	lr
	...

08000654 <__libc_init_array>:
 8000654:	b570      	push	{r4, r5, r6, lr}
 8000656:	4d0d      	ldr	r5, [pc, #52]	@ (800068c <__libc_init_array+0x38>)
 8000658:	4c0d      	ldr	r4, [pc, #52]	@ (8000690 <__libc_init_array+0x3c>)
 800065a:	1b64      	subs	r4, r4, r5
 800065c:	10a4      	asrs	r4, r4, #2
 800065e:	2600      	movs	r6, #0
 8000660:	42a6      	cmp	r6, r4
 8000662:	d109      	bne.n	8000678 <__libc_init_array+0x24>
 8000664:	4d0b      	ldr	r5, [pc, #44]	@ (8000694 <__libc_init_array+0x40>)
 8000666:	4c0c      	ldr	r4, [pc, #48]	@ (8000698 <__libc_init_array+0x44>)
 8000668:	f000 f818 	bl	800069c <_init>
 800066c:	1b64      	subs	r4, r4, r5
 800066e:	10a4      	asrs	r4, r4, #2
 8000670:	2600      	movs	r6, #0
 8000672:	42a6      	cmp	r6, r4
 8000674:	d105      	bne.n	8000682 <__libc_init_array+0x2e>
 8000676:	bd70      	pop	{r4, r5, r6, pc}
 8000678:	f855 3b04 	ldr.w	r3, [r5], #4
 800067c:	4798      	blx	r3
 800067e:	3601      	adds	r6, #1
 8000680:	e7ee      	b.n	8000660 <__libc_init_array+0xc>
 8000682:	f855 3b04 	ldr.w	r3, [r5], #4
 8000686:	4798      	blx	r3
 8000688:	3601      	adds	r6, #1
 800068a:	e7f2      	b.n	8000672 <__libc_init_array+0x1e>
 800068c:	080006b4 	.word	0x080006b4
 8000690:	080006b4 	.word	0x080006b4
 8000694:	080006b4 	.word	0x080006b4
 8000698:	080006b8 	.word	0x080006b8

0800069c <_init>:
 800069c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800069e:	bf00      	nop
 80006a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006a2:	bc08      	pop	{r3}
 80006a4:	469e      	mov	lr, r3
 80006a6:	4770      	bx	lr

080006a8 <_fini>:
 80006a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006aa:	bf00      	nop
 80006ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006ae:	bc08      	pop	{r3}
 80006b0:	469e      	mov	lr, r3
 80006b2:	4770      	bx	lr
